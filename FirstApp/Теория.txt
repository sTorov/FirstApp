Методы расширения (extension methods) позволяют добавлять новые методы в уже существующие типы без 
создания нового производного класса. Данная функциональность бывает полезна, когда нужно добавить 
в класс (или структуру) новый метод для работы с экземпляром, но мы не можем изменить сам класс 
(нет доступа к исходному коду), либо не можем использовать наследование.

Метод расширения должен объявляться в статическом классе, обычно их называют по типу, которому 
будет относиться расширение, добавляя Extensions. Например, для расширения функциональностм типа 
int это может быть класс IntExtensions.

Сам метод должен быть статическим с одним небольшим отличием в объявлении: метод должен иметь как 
минимум 1 параметр, и перед типом этого параметра следует добавить ключевое слово this:

[модификатор доступа] static <тип возвращаемого значения> <название метода>(
 this <тип параметра 1> <название параметра 1>,
 [<тип параметра 2> <название параметра 2>, ...]
)

Применение методов расширения очень удобно, но при этом надо помнить, что метод расширения никогда 
не будет вызван, если он имеет ту же сигнатуру, что и метод, изначально определенный в типе.

Также следует учитывать, что методы расширения действуют на уровне пространства имен. То есть, 
если добавить в проект другое пространство имен, то метод не будет применяться к строкам, и в этом 
случае надо будет подключить пространство имен метода через директиву using.